{"version":3,"sources":["./src/app/component/card/card.component.ts","./src/app/component/card/card.component.html","./src/app/component/sandbox/sandbox.component.ts","./src/app/component/sandbox/sandbox.component.html","./src/app/component/create-user/create-user.component.ts","./src/app/component/create-user/create-user.component.html","./src/app/component/multiplayer/multiplayer.component.ts","./src/environments/environment.ts","./src/app/services/login.service.ts","./src/app/component/join-game/join-game.component.ts","./src/app/component/join-game/join-game.component.html","./src/app/component/blackjack/blackjack.component.ts","./src/app/component/blackjack/blackjack.component.html","./src/app/component/host-game/host-game.component.ts","./src/app/component/host-game/host-game.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/component/homepage/homepage.component.ts","./src/app/component/homepage/homepage.component.html","./src/app/models/cardContainer.ts","./src/app/component/login/login.component.ts","./src/app/component/login/login.component.html","./src/app/services/backend-api.service.ts","./src/app/component/singleplayer/singleplayer.component.ts","./src/app/component/leaderboard/leaderboard.component.ts","./src/app/component/leaderboard/leaderboard.component.html","./src/app/app-routing.module.ts","./src/app/component/host/host.component.ts","./src/app/component/host/host.component.html","./src/app/models/card.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { CdkDragEnd } from '@angular/cdk/drag-drop';\r\nimport { FixedSizeVirtualScrollStrategy } from '@angular/cdk/scrolling';\r\nimport { Component, ElementRef, Input, OnInit, TRANSLATIONS, ViewChild} from '@angular/core';\r\nimport { BlackjackComponent } from '../blackjack/blackjack.component';\r\nimport { SandboxComponent } from '../sandbox/sandbox.component';\r\n\r\n@Component({\r\n  selector: 'app-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.scss'],\r\n  animations: [\r\n    trigger('FlipCard',\r\n    [\r\n      state('NotFlipped', style({\r\n        transform: 'rotateY(90deg)',\r\n        position: 'absolute'\r\n      })),\r\n      state('Flipped', style({\r\n        transform: 'rotateY(0deg)',\r\n        position: 'absolute'\r\n      })),\r\n      transition('NotFlipped <=> Flipped',\r\n      [\r\n        animate('0.25s')\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class CardComponent implements OnInit {\r\n  @Input() type: string;\r\n  @Input() number: string;\r\n  @Input() disabled: boolean;\r\n  @Input() cardInstanceNumber: number;\r\n  source: string;\r\n  public static numOfCards: number = 0;\r\n  xPos: number = 200;\r\n  yPos: number;\r\n  initialPosition;\r\n  flipping: Boolean = false;\r\n  isFlipped: Boolean = false;\r\n  public lastClickedCard: boolean = false;\r\n\r\n  constructor(private element: ElementRef) {\r\n    this.initialPosition = this.element.nativeElement.getBoundingClientRect();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.GetImageSource();\r\n    CardComponent.numOfCards++;\r\n    this.xPos += 200 * this.cardInstanceNumber;\r\n  }\r\n\r\n  //Changes the scss classes\r\n  public ChangeClass(): void\r\n  {\r\n    SandboxComponent.GetInstance().ClearCardsClasses(this);\r\n  }\r\n\r\n  //Will get the current position in x and y coordinates of the card\r\n  public GetPosition(event: CdkDragEnd): void\r\n  {\r\n    //this.xPos = event.source._dragRef.getFreeDragPosition().x;\r\n    //this.yPos = event.source._dragRef.getFreeDragPosition().y;\r\n    //console.log(this.xPos, this.yPos);\r\n  }\r\n\r\n  //Flips the card when double clicked\r\n  FlipCardOnDoubleClick(){\r\n    this.isFlipped = !this.isFlipped;\r\n    //this.flipping = true;\r\n    //setTimeout(() => \r\n    //{\r\n      this.GetImageSource();\r\n      //this.flipping = false;\r\n    //}, 250);\r\n  }\r\n\r\n  //Determines the image source\r\n GetImageSource()\r\n {\r\n    if (!this.isFlipped)\r\n    {\r\n      this.source = '../../../assets/Cards/' + this.type + '/' + (this.number==\"-1\"?\"CardBack\":this.number) + '.jpg';\r\n    }\r\n    else\r\n    {\r\n      this.source = '../../../assets/Cards/CardBack.jpg';\r\n    }\r\n }\r\n\r\n}\r\n","<a >\r\n    <img\r\n    [ngClass]=\"{\r\n        'card': !lastClickedCard,\r\n        'lastClickedCard': lastClickedCard\r\n    }\"\r\n    [src]=\"source\"\r\n    width=\"200px\"\r\n    height=\"300px\"\r\n    [style.top]=\"yPos\"\r\n    [style.left.px]=\"xPos\"\r\n    (mousedown)=\"ChangeClass()\"\r\n    (cdkDragEnded)=\"GetPosition($event)\"\r\n    (dblclick)=\"FlipCardOnDoubleClick()\"\r\n    [@FlipCard]=\"flipping ? 'NotFlipped' : 'Flipped'\"\r\n    [cdkDragDisabled]=\"disabled\"\r\n    cdkDrag> \r\n</a>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { CardComponent } from '../card/card.component';\r\nimport { element } from 'protractor';\r\nimport { cardContainer } from 'src/app/models/cardContainer';\r\nimport { card,makeCard,makeCardFromVals } from 'src/app/models/card';\r\n\r\n@Component({\r\n  selector: 'app-sandbox',\r\n  templateUrl: './sandbox.component.html',\r\n  styleUrls: ['./sandbox.component.scss']\r\n})\r\n\r\nexport class SandboxComponent implements OnInit {\r\n\r\n  public cardComponents: CardComponent[] = [];\r\n  private static instance: SandboxComponent; //singleton\r\n  constructor() {\r\n    //sets the singleton\r\n    if (SandboxComponent.instance == null)\r\n    {\r\n      SandboxComponent.instance = this;\r\n    }\r\n   }\r\n\r\n  cards:cardContainer = new cardContainer;\r\n\r\n  ngOnInit(): void {\r\n    CardComponent.numOfCards = 0;\r\n    this.cards.cards=[makeCard(1),makeCard(2),makeCard(3)];\r\n    CardComponent.numOfCards = 0;\r\n  }\r\n\r\n  //Places card in front\r\n  public ClearCardsClasses(cardToSetTrue: CardComponent): void\r\n  {\r\n    for (var i = 0; i < this.cardComponents.length; i++)\r\n    {\r\n      this.cardComponents[i].lastClickedCard = false;\r\n    }\r\n    cardToSetTrue.lastClickedCard = true;\r\n  }\r\n\r\n  //gets the singleton\r\n  public static GetInstance(): SandboxComponent\r\n  {\r\n    return SandboxComponent.instance;\r\n  }\r\n\r\n  //Adds a card to the cards\r\n  public AddCard(cardType: string, cardValue: string, cardFileName: string)\r\n  {\r\n    this.cards.cards.push(makeCardFromVals(cardType,cardValue));\r\n  }\r\n\r\n}\r\n","<div class=\"list\">\r\n    <br>\r\n    <div *ngFor=\"let card of cards.cards\">\r\n        <app-card\r\n        [type] = \"card.type\"\r\n        [number] = \"card.value\"\r\n        [disabled] = \"false\">\r\n    </app-card>\r\n    <div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport * as CryptoJS from 'crypto-js';\r\nimport { BackendApiService } from 'src/app/services/backend-api.service';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-create-user',\r\n  templateUrl: './create-user.component.html',\r\n  styleUrls: ['./create-user.component.scss']\r\n})\r\nexport class CreateUserComponent implements OnInit {\r\n\r\n  constructor(private backendApiService: BackendApiService, private route: ActivatedRoute, private router: Router) { }\r\n\r\n  re = new RegExp('[a-zA-Z0-9._%+-^@]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]+'); //regex used to check if email is in correct format\r\n/** Function when the form is submitted, get the values and pass them to the server */\r\n  submitUserFunction() { \r\n    var real_name = \"'\" + (<HTMLInputElement>document.getElementById(\"real_name\")).value + \"'\"; //gets real name\r\n    var username = \"'\" + (<HTMLInputElement>document.getElementById(\"username\")).value + \"'\"; //get username\r\n    var email = \"'\" + (<HTMLInputElement>document.getElementById(\"email\")).value + \"'\"; //get email\r\n    var hash = \"'\" + CryptoJS.MD5((<HTMLInputElement>document.getElementById(\"password\")).value) + \"'\"; //get password and hash it immediately\r\n\r\n    var dict = {\"real_name\": real_name, \"username\": username, \"hash\": hash, \"email\": email}; //place the variables into the dictionary\r\n\r\n    if ((<HTMLInputElement>document.getElementById(\"password\")).value != (<HTMLInputElement>document.getElementById(\"confirmpassword\")).value || (<HTMLInputElement>document.getElementById(\"password\")).value == \"\"){\r\n      alert(\"Passwords don't match\"); //if password and confirm password don't match, error\r\n    }else if(this.re.test(email) == false){\r\n      alert(\"Email not valid\"); //if email isn't in correct format, error\r\n    }else if(username == \"''\"){\r\n      alert(\"Invalid name\"); //if username is left blank, error\r\n    }\r\n    else{\r\n      this.backendApiService.backendRequest(\"persistInsertUser\", dict).subscribe(obj =>{ //otherwise send data to server and database\r\n        if(obj.hasOwnProperty('error')){\r\n          var errormsg = obj.error; //if the server has an error, display it\r\n          alert(\"Error! \" + errormsg);\r\n        }\r\n        else{\r\n          this.router.navigateByUrl('/login'); //return to homepage after user is created\r\n        }\r\n      });\r\n    }\r\n  }\r\n  /** Event function that looks for the 'Enter' key being pressed */\r\n  keyPress(Event){\r\n    if(Event.keyCode==13){\r\n      this.submitUserFunction(); //submits create user if enter is pressed\r\n    }\r\n  }\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","\r\n<div style=\"background-color: honeydew;\">\r\n<h2 style=\"text-align: center; margin-top: 100px;\">Create New Account</h2>\r\n<div class=\"container\" >\r\n    <form style=\"text-align:center;\" action=\"/action_page.php\" (keydown)=\"keyPress($event)\">\r\n        <label style=\"font-size: 25px\" for=\"name\" >Full Name: &nbsp;</label>\r\n        <input type=\"text\" id=real_name name=\"name\"><br>\r\n        <label style=\"font-size: 25px\" for=\"username\">UserName: &nbsp;</label>\r\n        <input type=\"text\" id=\"username\" name=\"username\"><br>\r\n        <label style=\"font-size: 25px\" for=\"email\">Email: &nbsp;</label>\r\n        <input type=\"text\" id=\"email\" name=\"email\"><br>\r\n        <label style=\"font-size: 25px\" for=\"password\">Password: &nbsp;</label>\r\n        <input type=\"password\" id=\"password\" name=\"password\"><br>\r\n        <label style=\"font-size: 25px\" for=\"password\">Confirm Password: &nbsp;</label>\r\n        <input type=\"password\" id=\"confirmpassword\" name=\"confirmpassword\"><br><br>\r\n        <button style=\"width:100px;\" type=\"button\" (click)=\"submitUserFunction()\">\r\n            Submit\r\n        </button>\r\n    </form>\r\n</div>\r\n<br><br><br>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-multiplayer',\r\n  templateUrl: './multiplayer.component.html',\r\n  styleUrls: ['./multiplayer.component.scss']\r\n})\r\nexport class MultiplayerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { BackendApiService } from './backend-api.service';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n  constructor(private cookieService: CookieService, private backendApiService: BackendApiService, private router: Router) {\r\n  }\r\n\r\n  public login(username: string, useremail: string, id: number, certificate: string): void {\r\n    this.cookieService.set('loggedIn', 'true');\r\n    this.cookieService.set('name', username);\r\n    this.cookieService.set('email', useremail);\r\n    this.cookieService.set('userID', id.toString());\r\n    this.cookieService.set('certificate', certificate);\r\n  }\r\n\r\n  public isLoggedIn(): boolean {\r\n    return this.cookieService.get('loggedIn') == 'true';\r\n  }\r\n  public getRole(): string {\r\n    return this.cookieService.get('role');\r\n  }\r\n  public getName(): string {\r\n    return this.cookieService.get('name');\r\n  }\r\n  public getID(): number {\r\n    return +this.cookieService.get('userID');\r\n  }\r\n  public getCertificate(): string {\r\n    return this.cookieService.get('certificate');\r\n  }\r\n  public getEmail(): string {\r\n    return this.cookieService.get('email');\r\n  }\r\n  public logout() {\r\n    this.cookieService.delete('loggedIn');\r\n    this.cookieService.delete('role');\r\n    this.cookieService.delete('name');\r\n    this.cookieService.delete('email');\r\n    this.cookieService.delete('userID');\r\n    this.cookieService.delete('certificate');\r\n  }\r\n \r\n  submitLoginFunction(email: string, hash: string): Observable<any> { //when user clicks submit for login, run these commands\r\n    var dict = { \"hash\": hash, \"email\": email }; //put variables into a dictionary\r\n    dict[\"certificate\"] = this.getCertificate();\r\n    dict[\"userID\"] = this.getID();\r\n    /**\r\n     * Login user query to backend server.\r\n     * The password hash and the email entered by the user are passed in.\r\n     * Returns a named error is credentials are invalid \r\n     * and returns the name, email, user id, and cookie verification certificate if valid\r\n     */\r\n    return this.backendApiService.backendRequest(\"loginUser\", dict);\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { BackendApiService } from 'src/app/services/backend-api.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-join-game',\r\n  templateUrl: './join-game.component.html',\r\n  styleUrls: ['./join-game.component.scss']\r\n})\r\nexport class JoinGameComponent implements OnInit {\r\n\r\n\r\n  currentGameIDs:number[];\r\n  currentGamePlayerNums:number[];\r\n  playerID:number\r\n\r\n  constructor(private backendApiService: BackendApiService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getGames()\r\n  }\r\n  async getGames(){\r\n    var dict={};\r\n    dict[\"gameType\"]=\"blackjack\";\r\n    this.backendApiService.backendRequest(\"getGames\",dict).subscribe(obj =>{\r\n      this.currentGameIDs = Object.keys(obj).map(key=>Number(key));\r\n      this.currentGamePlayerNums = Object.keys(obj).map(key=>Number(obj[key]));\r\n    });\r\n  }\r\n  async joinGame(gameID:number){\r\n    var dict={};\r\n    dict[\"gameID\"]=gameID;\r\n    this.backendApiService.backendRequest(\"joinGame\",dict).subscribe(obj =>{\r\n      console.log(\"join\",obj);\r\n      this.playerID=obj.playerID;\r\n      this.router.navigate(['/blackjack/' + gameID + '/' + this.playerID]);\r\n    });\r\n    \r\n  }\r\n}\r\n","<div class=\"card text-center bg-dark text-white\" style=\"min-width: 500px; max-width: 65%; border-color: black\">\r\n    <div class=\"card-body\">\r\n        <h1 class=\"card-title\">Join Game</h1>\r\n\r\n        <div class=\"row\" style=\"justify-content: center; margin: 10px;\">\r\n            <div class=\"col-4\" style=\"min-width:400px;max-width:max-content\">\r\n                <div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\r\n                    <div *ngFor=\"let game of currentGameIDs;let i = index\">\r\n                        <a class=\"list-group-item list-group-item-action active\" id=\"list-home-list\" role=\"tab\"\r\n                            aria-controls=\"home\">Game ID: {{currentGameIDs[i]}} Player Count:\r\n                            {{currentGamePlayerNums[i]}}\r\n                        <button type=\"button\" class=\"btn btn-secondary\" style=\"margin-left:15px\"\r\n                            (click)=\"joinGame(currentGameIDs[i])\">Join</button></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { TestBed } from '@angular/core/testing';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Console } from 'console';\r\nimport { promise } from 'protractor';\r\nimport { interval, Subscription } from 'rxjs';\r\nimport { card, makeCard } from 'src/app/models/card';\r\nimport { cardContainer, emptyCardContainer } from 'src/app/models/cardContainer';\r\nimport { BackendApiService } from 'src/app/services/backend-api.service';\r\nimport { CardComponent } from '../card/card.component';\r\n\r\n@Component({\r\n  selector: 'app-blackjack',\r\n  templateUrl: './blackjack.component.html',\r\n  styleUrls: ['./blackjack.component.scss']\r\n})\r\nexport class BlackjackComponent implements OnInit {\r\n  @Input() playerID:String;\r\n  @Input() gameID:number;\r\n  isTurn:boolean;\r\n  gameContainers:Map<String,cardContainer>;\r\n  static instance: BlackjackComponent;\r\n\r\n  finalPlayerScore:String;\r\n  finalDealerScore:String;\r\n  playerWinOrLose:String;\r\n  otherPlayers:String[];\r\n  roundActive:boolean;\r\n  \r\n  subscription: Subscription;\r\n  source = interval(1000);\r\n \r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n  \r\n  constructor(private backendApiService: BackendApiService, private route: ActivatedRoute) { }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    CardComponent.numOfCards = 0;\r\n    this.gameID = Number(this.route.snapshot.paramMap.get('gameID'));\r\n    this.playerID = this.route.snapshot.paramMap.get('playerID');\r\n    this.isTurn=false;\r\n    this.otherPlayers=[];\r\n    this.gameContainers=new Map<String,cardContainer>();\r\n    this.gameContainers.set(this.playerID, emptyCardContainer());\r\n    this.gameContainers.set(\"dealer\", emptyCardContainer());\r\n    BlackjackComponent.instance = this;\r\n    this.subscription = this.source.subscribe(val => this.checkTurn());\r\n  }\r\n\r\n  static GetInstance(): BlackjackComponent\r\n  {\r\n    return BlackjackComponent.instance;\r\n  }\r\n  async getGames(){\r\n    var dict={};\r\n    dict[\"gameID\"]=this.gameID;\r\n    dict[\"method\"]=\"getGames\";\r\n    this.backendApiService.backendRequest(\"blackjack\",dict).subscribe(obj =>{\r\n      CardComponent.numOfCards = 0;\r\n    });\r\n  }\r\n  async deal(){\r\n    CardComponent.numOfCards = 0;\r\n    var dict={};\r\n    dict[\"gameID\"]=this.gameID;\r\n    dict[\"method\"]=\"deal\";\r\n    this.backendApiService.backendRequest(\"blackjack\",dict).subscribe(async obj =>{\r\n      CardComponent.numOfCards = 0;\r\n      await this.checkTurn();\r\n    });\r\n  }\r\n  async hit(){\r\n    var dict={};\r\n    dict[\"gameID\"]=this.gameID;\r\n    dict[\"method\"]=\"hit\";\r\n    dict[\"hand\"]=this.playerID;\r\n    this.backendApiService.backendRequest(\"blackjack\",dict).subscribe(async obj =>{\r\n      CardComponent.numOfCards = 0;\r\n      await this.checkTurn();\r\n    });\r\n  }\r\n  async stay(){\r\n    console.log(this.gameID);\r\n    console.log(this.gameContainers);\r\n    var dict={};\r\n    dict[\"gameID\"]=this.gameID;\r\n    dict[\"method\"]=\"stay\";\r\n    dict[\"hand\"]=this.playerID;\r\n    this.backendApiService.backendRequest(\"blackjack\",dict).subscribe(async obj =>{\r\n      CardComponent.numOfCards = 0;\r\n      await this.checkTurn();\r\n    });\r\n  }\r\n  async updateHand(){\r\n    var dict={};\r\n    dict[\"gameID\"]=this.gameID;\r\n    dict[\"method\"]=\"getHand\";\r\n    dict[\"hand\"]=this.playerID;\r\n    this.backendApiService.backendRequest(\"blackjack\",dict).subscribe(obj =>{\r\n      CardComponent.numOfCards = 0;\r\n      var temp:cardContainer=emptyCardContainer();\r\n      for(var key in obj){\r\n        temp.cards.push(makeCard(obj[key].cardNum));\r\n      }\r\n      this.gameContainers.set(this.playerID,temp);\r\n    });\r\n  }\r\n  async updateAll(){\r\n    var dict={};\r\n    dict[\"gameID\"]=this.gameID;\r\n    dict[\"method\"]=\"showCards\";\r\n    this.backendApiService.backendRequest(\"blackjack\",dict).subscribe(async obj =>{\r\n      CardComponent.numOfCards = 0;\r\n      this.otherPlayers=[];\r\n      for(var key in obj){\r\n        this.otherPlayers.push(key);\r\n        var temp = emptyCardContainer();\r\n        for(var cardKey in obj[key]){\r\n         temp.cards.push(makeCard(obj[key][cardKey].cardNum)); \r\n        }\r\n        CardComponent.numOfCards = 0;\r\n        if(key!=this.playerID){\r\n          this.gameContainers.set(key,temp);\r\n        }\r\n      }\r\n      this.otherPlayers.splice(this.otherPlayers.lastIndexOf(this.playerID),1);\r\n      this.otherPlayers.splice(this.otherPlayers.lastIndexOf(\"dealer\"),1);\r\n      await this.updateHand();\r\n    });\r\n  }\r\n\r\n  async checkTurn(){\r\n    var dict={};\r\n    dict[\"gameID\"]=this.gameID;\r\n    dict[\"method\"]=\"checkIfTurn\";\r\n    dict[\"hand\"]=this.playerID;\r\n    this.backendApiService.backendRequest(\"blackjack\",dict).subscribe(async obj =>{\r\n      CardComponent.numOfCards = 0;\r\n      this.roundActive=obj.roundActive==\"true\"?true:false;\r\n      this.isTurn=obj.isTurn==\"true\"?true:false;\r\n      this.finalPlayerScore = obj.PlayerScore;\r\n      this.finalDealerScore = obj.DealerScore;\r\n      this.playerWinOrLose = obj.WinOrLose;\r\n      await this.updateAll();\r\n    });\r\n  }\r\n}\r\n","<div style=\"width: 1920px;height: 1080px;\">\r\n    <button [disabled]=\"roundActive\" *ngIf=\"playerID=='player1'\" type=\"button\" class=\"btn btn-primary btn-circle btn-xl\" (click)=\"deal()\">Deal</button>\r\n    <button [disabled]=\"!isTurn\" type=\"button\" class=\"btn btn-success btn-circle btn-xl\" (click)=\"hit()\">Hit</button>\r\n    <button [disabled]=\"!isTurn\" type=\"button\" class=\"btn btn-danger btn-circle btn-xl\" (click)=\"stay()\">Stay</button>\r\n    <div *ngIf=\"!roundActive\" style=\"font-size:36px;color:white\">{{playerWinOrLose}} {{finalDealerScore}} {{finalPlayerScore}}</div>\r\n    \r\n    <div *ngFor=\"let card of gameContainers.get(playerID).cards; let i = index\" class=\"player\">\r\n        <app-card\r\n            [type]=\"card.type\"\r\n            [number]=\"card.value\"\r\n            [disabled]=\"true\"\r\n            [cardInstanceNumber]=\"i\">\r\n        </app-card>\r\n    </div>\r\n\r\n    <div *ngFor=\"let card of gameContainers.get('dealer').cards; let i = index\" class=\"dealer\">\r\n        <app-card\r\n            [type]=\"card.type\"\r\n            [number]=\"card.value\"\r\n            [disabled]=\"true\"\r\n            [cardInstanceNumber]=\"i\">\r\n        </app-card>\r\n    </div>\r\n    \r\n    <div *ngFor=\"let player of otherPlayers\" class=\"otherPlayers\">\r\n        <div *ngFor=\"let card of gameContainers.get(player).cards; let i = index\">\r\n            <app-card\r\n            [type]=\"card.type\"\r\n            [number]=\"card.value\"\r\n            [disabled]=\"true\"\r\n            [cardInstanceNumber]=\"i\">\r\n        </app-card>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { BackendApiService } from 'src/app/services/backend-api.service';\r\nimport { Router } from '@angular/router';\r\nimport * as $ from 'jQuery';\r\nimport { interval, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-host-game',\r\n  templateUrl: './host-game.component.html',\r\n  styleUrls: ['./host-game.component.scss']\r\n})\r\n\r\nexport class HostGameComponent implements OnInit {\r\n  gameID: number;\r\n  playerID: number;\r\n  currentGamePlayerNums:number[];\r\n\r\n  subscription: Subscription;\r\n  source = interval(1000);\r\n  \r\n  constructor(private backendApiService: BackendApiService, private router: Router) { }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    await this.hostGame();\r\n    this.subscription = this.source.subscribe(val => this.getGames());\r\n }\r\n\r\n  async hostGame(){\r\n    var dict={};\r\n    dict[\"gameType\"]=\"blackjack\";\r\n    this.backendApiService.backendRequest(\"hostGame\",dict).subscribe(async obj =>{\r\n      console.log(obj);\r\n      this.gameID = obj.blackjack;\r\n      await this.joinGame();\r\n    });\r\n    \r\n  }\r\n  async setup(){\r\n    var dict={};\r\n    dict[\"gameID\"]=this.gameID;\r\n    dict[\"method\"]=\"setup\";\r\n    console.log(dict);\r\n    this.backendApiService.backendRequest(\"blackjack\",dict).subscribe(obj =>{\r\n      console.log(\"setup\",obj);\r\n    });\r\n    this.router.navigate(['/blackjack/' + this.gameID + '/' + this.playerID]);\r\n  }\r\n  async joinGame(){\r\n    var dict={};\r\n    dict[\"gameID\"]=this.gameID;\r\n    this.backendApiService.backendRequest(\"joinGame\",dict).subscribe(obj =>{\r\n      console.log(\"join\",obj);\r\n      this.playerID=obj.playerID;\r\n    });\r\n  }\r\n  async getGames(){\r\n    var dict={};\r\n    dict[\"gameType\"]=\"blackjack\";\r\n    this.backendApiService.backendRequest(\"getGames\",dict).subscribe(obj =>{\r\n      this.currentGamePlayerNums = Object.keys(obj).map(key=>Number(obj[key]));\r\n    });\r\n  }\r\n}\r\n","<div class=\"card text-center bg-dark text-white\" style=\"min-width: 500px; max-width: 65%; border-color: black\">\r\n  <div class=\"card-body\">\r\n    <h1 class=\"card-title\">Host Game</h1>\r\n\r\n    <h6 class=\"card-subtitle\">Game ID: {{ this.gameID }}</h6>\r\n\r\n    <div class=\"row\" style=\"justify-content: center; margin: 10px;\">\r\n      <div class=\"col-4\">\r\n        <div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\r\n          <a class=\"list-group-item list-group-item-action active\" id=\"list-home-list\" role=\"tab\"\r\n            aria-controls=\"home\">Blackjack</a>\r\n          <a class=\"list-group-item list-group-item-action disabled\" id=\"list-profile-list\" role=\"tab\"\r\n            aria-controls=\"profile\">Hold'em</a>\r\n          <a class=\"list-group-item list-group-item-action disabled\" id=\"list-messages-list\" role=\"tab\"\r\n            aria-controls=\"messages\">War</a>\r\n          <a class=\"list-group-item list-group-item-action disabled\" id=\"list-settings-list\" role=\"tab\"\r\n            aria-controls=\"settings\">Slapjack</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <h6 class=\"card-subtitle\">Players In Lobby: {{this.currentGamePlayerNums[this.gameID-1]}}</h6>\r\n    <button type=\"button\" class=\"btn btn-primary\" style=\"margin-top:10px\" (click)=\"setup()\">Start Game</button>\r\n  </div>\r\n</div>","import {Component, OnInit} from '@angular/core';\r\nimport {NgxSpinnerService} from 'ngx-spinner';\r\nimport {BackendApiService} from './services/backend-api.service'\r\nimport {LoginService} from './services/login.service';\r\nimport {CookieService} from 'ngx-cookie-service';\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport * as $ from 'jquery';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  public dropdownOpen = false;\r\n  loggedIn = false;\r\n  constructor(private spinner: NgxSpinnerService, private backendApiService: BackendApiService, public loginService: LoginService, private cookieService: CookieService) {\r\n  }\r\n\r\n  logoutFunction(){\r\n    this.cookieService.deleteAll();\r\n    this.loginService.logout();\r\n  }\r\n\r\n  ngOnInit() {\r\n    //Toggle Click Function\r\n    $(\"#menu-toggle\").click(function(e) {\r\n    e.preventDefault();\r\n    $(\"#wrapper\").toggleClass(\"toggled\");\r\n    });\r\n  }\r\n}","<div class=\"full\">\r\n<div class=\"d-flex\" id=\"wrapper\">\r\n  <!-- Sidebar -->\r\n  <div class=\"navbar-custom border-right\" id=\"sidebar-wrapper\">\r\n    <div style=\"justify-content: right; margin-left: 320px\">\r\n      <!-- Toggle Button -->\r\n    <button class=\"navbar-toggler collapsed\" id=\"menu-toggle\">\r\n      <img style=\"display:inline-block;\" src=\"https://mdbootstrap.com/img/svg/hamburger1.svg?color=287CEB\">\r\n    </button>\r\n    </div>\r\n    <div class=\"sidebar-heading\" style=\"justify-content:right;\">\r\n      <a class=\"btn\" ><img style=\"display:inline-block;\" src=\"assets/img/digicard_logo_1.jpg\"></a>\r\n    </div>\r\n    <div class=\"list-group list-group-flush\">\r\n      <p style=\"margin-left:20px; margin-right:10px; color:black\" *ngIf=\"this.loginService.isLoggedIn()\">Welcome back, {{ this.loginService.getName() }}!</p>\r\n      <a class=\"btn\" *ngIf=\"!this.loginService.isLoggedIn()\" [routerLink]=\"['/login']\"><img style=\"display:inline-block;\" src=\"assets/img/login.png\" class=\"navbar-image-login\"></a>\r\n      <a class=\"btn\" *ngIf=\"this.loginService.isLoggedIn()\" [routerLink]=\"['/']\"><img style=\"display:inline-block;\" (click)=\"logoutFunction();\" src=\"assets/img/logout.png\" class=\"navbar-image-logout\"></a>\r\n      <!-- SinglePlayer Dropdown -->\r\n      <a class=\"btn\" data-toggle=\"collapse\" href=\"#singleplayer\" aria-expanded=\"false\" aria-controls=\"collapse\"><img style=\"display:inline-block;\" src=\"assets/img/singleplayer.png\" class=\"navbar-image singleplayer-button\"></a>\r\n      <div class=\"collapse multi-collapse\" id=\"singleplayer\">\r\n        <!-- Sandbox -->\r\n        <a class=\"btn sandbox-button\" [routerLink]=\"['/sandbox']\"><img style=\"display:inline-block;\" src=\"assets/img/sandbox.png\" class=\"navbar-drop-image\"></a>\r\n        <!-- Blackjack SP -->\r\n        <a class=\"btn blackjack-button-sp\" [routerLink]=\"['blackjack']\"><img style=\"display:inline-block;\" src=\"assets/img/Blackjack.png\" class=\"navbar-drop-image\"></a>\r\n      </div>\r\n      <!-- Multiplayer Dropdown -->\r\n      <a class=\"btn\" data-toggle=\"collapse\" href=\"#multiplayer\" aria-expanded=\"false\" aria-controls=\"collapse\"><img style=\"display:inline-block;\" src=\"assets/img/multiplayer.png\" class=\"navbar-image\"></a>\r\n      <div class=\"collapse multi-collapse\" id=\"multiplayer\">\r\n        <!-- Join Game -->\r\n        <a class=\"btn holdem-button\" [routerLink]=\"['/join-game']\"><img style=\"display:inline-block;\" src=\"assets/img/JoinGame.png\" class=\"navbar-drop-image\"></a>\r\n        <!-- Host Game -->\r\n        <a class=\"btn blackjack-button-mp\" [routerLink]=\"['/host-game']\"><img style=\"display:inline-block;\" src=\"assets/img/HostGame.png\" class=\"navbar-drop-image\"></a>\r\n      </div>\r\n      <hr>\r\n      <!-- Leaderboard -->\r\n      <a class=\"btn\" [routerLink]=\"['/leaderboard']\"><img style=\"display:inline-block;\" src=\"assets/img/leaderboard.png\" class=\"navbar-image-leaderboard\"></a>\r\n    </div>\r\n  </div>\r\n  <!-- /#sidebar-wrapper -->\r\n  <!-- Page Content -->\r\n  <div id=\"page-content-wrapper\">\r\n    \r\n  <!-- /#page-content-wrapper -->\r\n  <div style=\"margin-top:106px\" id=\"component\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule, RoutingComponents } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport {MatTableModule} from '@angular/material/table';\r\n\r\nimport { HomepageComponent } from './component/homepage/homepage.component';\r\n\r\n// remote communication\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\n// bootstrap modules\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { HostComponent } from './component/host/host.component';\r\nimport { SingleplayerComponent } from './component/singleplayer/singleplayer.component';\r\nimport { MultiplayerComponent } from './component/multiplayer/multiplayer.component';\r\nimport { SandboxComponent } from './component/sandbox/sandbox.component';\r\nimport { CardComponent } from './component/card/card.component';\r\nimport { LeaderboardComponent } from './component/leaderboard/leaderboard.component';\r\nimport { BlackjackComponent } from './component/blackjack/blackjack.component';\r\nimport { LoginComponent } from './component/login/login.component';\r\nimport { CreateUserComponent } from './component/create-user/create-user.component';\r\nimport { HostGameComponent } from './component/host-game/host-game.component';\r\nimport { JoinGameComponent } from './component/join-game/join-game.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    BlackjackComponent,\r\n    RoutingComponents,\r\n    HomepageComponent,\r\n    HostComponent,\r\n    SingleplayerComponent,\r\n    MultiplayerComponent,\r\n    SandboxComponent,\r\n    CardComponent,\r\n    LeaderboardComponent,\r\n    LoginComponent,\r\n    CreateUserComponent,\r\n    HostGameComponent,\r\n    JoinGameComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    NgxSpinnerModule,\r\n    BrowserAnimationsModule,\r\n    TooltipModule.forRoot(),\r\n    DragDropModule,\r\n    MatTableModule,\r\n  ],\r\n  providers: [CookieService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BackendApiService } from 'src/app/services/backend-api.service';\r\n\r\n@Component({\r\n  selector: 'app-homepage',\r\n  templateUrl: './homepage.component.html',\r\n  styleUrls: ['./homepage.component.scss']\r\n})\r\nexport class HomepageComponent implements OnInit {\r\n\r\n  constructor(private backendApiService: BackendApiService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div>\r\n    \r\n</div>","import { card } from './card';\r\n\r\nexport class cardContainer{\r\n    public cards: card[];\r\n}\r\n\r\nexport function emptyCardContainer(){\r\n    var newCC:cardContainer = {cards:[]};\r\n    return newCC;\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { BackendApiService } from 'src/app/services/backend-api.service';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport {Router} from '@angular/router';\r\nimport * as CryptoJS from 'crypto-js';\r\nimport { LoginService } from 'src/app/services/login.service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor(private backendApiService: BackendApiService, private route: ActivatedRoute, private router: Router, private loginService: LoginService, private cookieService: CookieService) { \r\n\r\n  }\r\n\r\n  re = new RegExp('[a-zA-Z0-9._%+-^@]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]+'); //regex for checking email format\r\n\r\n  submitLoginFunction() { //when user clicks submit for login, run these commands\r\n    var email = (<HTMLInputElement>document.getElementById(\"email\")).value; //store the email\r\n    var hash = CryptoJS.MD5((<HTMLInputElement>document.getElementById(\"password\")).value); //hash the password and store the hash\r\n\r\n    if ((<HTMLInputElement>document.getElementById(\"password\")).value == \"\" || (<HTMLInputElement>document.getElementById(\"email\")).value == \"\"){\r\n      alert(\"A text field is empty\"); //check if the email or password is empty and error if so\r\n    }else{\r\n      /**\r\n       * Login user query to backend server.\r\n       * The password hash and the email entered by the user are passed in.\r\n       * Returns a named error if credentials are invalid \r\n       * and returns the name, email, user id, and cookie verification certificate if valid\r\n       */\r\n      this.loginService.submitLoginFunction(email,hash.toString()).subscribe(obj =>{\r\n        console.log(obj.results);\r\n        if(obj.results==null){ //If the server returns nothing, the username or password was incorrect, try again\r\n          alert(\"Invalid Username Or Password\");\r\n        }\r\n        else{ //take the role, name, and userid that was returned and store it for use later\r\n          console.log(obj.results);\r\n          this.loginService.login(obj.results[0].real_name,email,obj.results[0].user_id,obj.certificate);\r\n          this.router.navigateByUrl('/'); //return to home page\r\n        }\r\n      });  \r\n    }\r\n  }\r\n  /**\r\n   * Function used to provide enter button submit functionality\r\n   */\r\n  keyPress(Event){\r\n    if(Event.keyCode==13){\r\n      this.submitLoginFunction();\r\n    }\r\n  }\r\n  ngOnInit() {\r\n  }\r\n\r\n}","\r\n<div style =\"background-color: honeydew;\">\r\n<h2 style= \" font-size: 75px; text-align: center; margin-top: 100px; color:black\">Login</h2>\r\n<div class=\"container\" >\r\n    <form id=\"loginForm\" style=\"text-align:center;\" action=\"/action_page.php\" (keydown)=\"keyPress($event)\">\r\n        <label style= \"font-size: 25px\" for=\"username\">Email Address: &nbsp;</label>\r\n        <input styletype=\"text\" id=\"email\" name=\"email\"><br>\r\n        <label style=\"font-size: 25px \" for=\"password\">Password: &nbsp;</label>\r\n        <input type=\"password\" id=\"password\" name=\"password\"><br><br>\r\n        <button style=\"width:100px;\" type=\"button\" (click)=\"submitLoginFunction()\">\r\n            Submit\r\n        </button>\r\n    </form>\r\n    \r\n</div>\r\n<br>\r\n<div style=\"text-align: center;\">\r\n    <nav><a [routerLink]=\"['/createUser']\"><p style=\"font-size: 15px; color: blue;\" >Create Account</p></a></nav>\r\n    <nav><a [routerLink]=\"['/passwordRecovery']\"><p style=\"font-size: 15px; color: blue;\" >Forgot Password (coming soon)</p></a></nav>\r\n</div>\r\n<br><br><br>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { HttpRequest, HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BackendApiService {\r\n\r\n  private baseUrl: string = \"https://nimmo.us/\";\r\n  // private baseUrl: string = \"http://localhost:8090/\";\r\n\r\n  constructor(private http: HttpClient, private cookieService: CookieService) { }\r\n\r\n  // url should be the address to the server API\r\n  // arguments should be a dictionary... example: var dict = {\"id\":\"1\",\"key2\":\"value2\"}\r\n  public backendRequest(url: string, args={}): Observable<any> {\r\n    args[\"certificate\"] = this.cookieService.get('certificate');\r\n    args[\"userID\"] = this.cookieService.get('userID');\r\n\r\n    // create a new multipart-form for every file\r\n    const formData: FormData = new FormData();\r\n    for(var key in args) {\r\n      formData.append(key,args[key])\r\n    }\r\n\r\n    // create a http-post request and pass the form\r\n    const req = new HttpRequest('POST', this.baseUrl + url, formData, {\r\n      responseType: 'text'\r\n    });\r\n\r\n    const response = new Subject<any>();\r\n\r\n    // send the http-request and subscribe for progress-updates\r\n    this.http.request(req).subscribe(event => {\r\n      if (event instanceof HttpResponse) {\r\n        response.next(JSON.parse(event.body as string));\r\n        response.complete();\r\n      }\r\n    }, (error) => {\r\n      response.next({error:\"The server responded with an error\"});\r\n      response.complete();\r\n      });\r\n\r\n    // return the map of progress.observables\r\n    return response.asObservable();\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-singleplayer',\r\n  templateUrl: './singleplayer.component.html',\r\n  styleUrls: ['./singleplayer.component.scss']\r\n})\r\nexport class SingleplayerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { ArrayDataSource, DataSource } from '@angular/cdk/collections';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { BackendApiService } from 'src/app/services/backend-api.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-leaderboard',\r\n  templateUrl: './leaderboard.component.html',\r\n  styleUrls: ['./leaderboard.component.scss'],\r\n})\r\n\r\nexport class LeaderboardComponent implements OnInit {\r\n  /** Data Source for table */\r\n  private dataSource;\r\n  /** Columns to be displayed in table */\r\n  displayedColumns: string[] = ['Name', \"Score\"];\r\n\r\n  constructor(private backendApiService: BackendApiService) {\r\n\r\n  }\r\n  \r\n\r\n  \r\n  ngOnInit(): void {\r\n\r\n      /**Make table load black jack leaderboard by default */\r\n      var dict = {}\r\n      dict[\"gameType\"] = \"BlackJack\";\r\n      this.backendApiService.backendRequest(\"getLeaderboard\",dict).subscribe(obj =>{this.dataSource = obj.results}\r\n      );\r\n\r\n  }\r\n\r\n  /**@description Makes request from server for specified game leaderboard */\r\n  /**@param String Name of game that leaderboard is requested for */\r\n  public getLeaderboard(gameName: String){\r\n    var dict ={};\r\n    dict[\"gameType\"]=gameName;\r\n    this.backendApiService.backendRequest(\"getLeaderboard\",dict).subscribe(obj =>{this.dataSource = obj.results}\r\n      );\r\n  }\r\n\r\n  /**@description Getter for table Data Source*/\r\n  /**@returns Returns the table data source */\r\n  public getDataSource(){\r\n\r\n    return this.dataSource;\r\n  }\r\n}\r\n\r\n","\r\n<!-- Buttons to select Game Leaderboard-->\r\n<div>\r\n    <div class=\"Leaderboard-Buttons\">\r\n    <button (click)=\"getLeaderboard('BlackJack')\" type=\"button\" class=\"btn btn-success\" >Black Jack</button>\r\n    <button (click)=\"getLeaderboard('Texas Holdem')\" type=\"button\" class=\"btn btn-success\">Texas Holdem</button>\r\n    </div>\r\n\r\n<div class=\"Leaderboard-Table\">\r\n    <!-- Table that gets datt from dataSource variable-->\r\n<table mat-table [dataSource] = \"getDataSource()\" > \r\n \r\n    \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"Name\">\r\n        <th mat-header-cell *matHeaderCellDef style =\"font-size:36px;color:white\"><b>Name</b></th>\r\n        <td mat-cell *matCellDef=\"let scores\" style =\"font-size:36px;color:white\"><b>{{scores.real_name}} </b></td>\r\n    </ng-container>\r\n\r\n    <!-- Score Column -->\r\n    <ng-container matColumnDef=\"Score\">\r\n        <th mat-header-cell *matHeaderCellDef style =\"font-size:36px;color:white\"><b>Score</b></th>\r\n        <td mat-cell *matCellDef=\"let scores\" style =\"font-size:36px;color:white\"><b>{{scores.score}}</b></td>\r\n    </ng-container>\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n</table> \r\n</div>\r\n\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BlackjackComponent } from './component/blackjack/blackjack.component';\r\nimport { CreateUserComponent } from './component/create-user/create-user.component';\r\nimport { HomepageComponent } from './component/homepage/homepage.component';\r\nimport { JoinGameComponent } from './component/join-game/join-game.component';\r\nimport { LeaderboardComponent } from './component/leaderboard/leaderboard.component';\r\nimport { LoginComponent } from './component/login/login.component';\r\nimport { MultiplayerComponent } from './component/multiplayer/multiplayer.component';\r\nimport { SandboxComponent } from './component/sandbox/sandbox.component';\r\nimport { SingleplayerComponent } from './component/singleplayer/singleplayer.component';\r\nimport { HostGameComponent } from './component/host-game/host-game.component';\r\n\r\n//import { LoginGuard } from './login.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomepageComponent },\r\n  { path: 'singleplayer', component: SingleplayerComponent },\r\n  { path: 'multiplayer', component: MultiplayerComponent },\r\n  { path: 'sandbox', component: SandboxComponent },\r\n  { path: 'leaderboard', component: LeaderboardComponent},\r\n  { path: 'host-game', component: HostGameComponent},\r\n  { path: 'blackjack/:gameID/:playerID', component: BlackjackComponent },\r\n  { path: 'blackjack', component: BlackjackComponent },\r\n  { path: 'join-game', component: JoinGameComponent},\r\n  { path: 'login', component: LoginComponent},\r\n  { path: 'createUser', component: CreateUserComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\nexport const RoutingComponents = [HostGameComponent, HomepageComponent, BlackjackComponent, SingleplayerComponent, MultiplayerComponent, SandboxComponent, LeaderboardComponent, LoginComponent, CreateUserComponent]\r\n","import { Component, OnInit } from '@angular/core';\n//import { Socket } from 'dgram';\n\n@Component({\n  selector: 'app-host',\n  templateUrl: './host.component.html',\n  styleUrls: ['./host.component.scss']\n})\nexport class HostComponent implements OnInit {\n\n  \n  constructor() {\n    // const app = require('express')();\n    // const http = require('http').Server(app);\n    // const io = require('socket.io')(http); \n\n  }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>host works!</p>\n","export class card{\r\n    type: String;\r\n    value: String;\r\n\r\n}\r\nexport function makeCard(cardNum:number):card{\r\n    if(cardNum==-1){\r\n        var blankCard:card = {type:\"\",value:\"-1\"};\r\n        return blankCard;\r\n    }\r\n    var newCard:card = {type:cardNum<13?\"Hearts\":cardNum<26?\"Spades\":cardNum<39?\"Diamonds\":\"Clubs\",value:\"\"+((cardNum%13)+1)}\r\n    return newCard;\r\n}\r\n\r\nexport function makeCardFromVals(cardType:string,cardValue:string):card{\r\n    var newCard:card = {type:cardType,value:cardValue};\r\n    return newCard;\r\n}","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}